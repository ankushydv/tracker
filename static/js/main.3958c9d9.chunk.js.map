{"version":3,"sources":["component/card/Cards.module.css","component/card/Cards.jsx","api/index.js","component/chart/Charts.jsx","component/countrryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","component/chart/Charts.module.css","component/countrryPicker/Country.module.css","image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","fetchedData","country","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","option","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","fromControl","NativeSelect","defaultValue","onChange","e","target","disabled","i","key","App","state","count","setState","this","src","coronaImage","alt","image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3958c9d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Q6i5\",\"card\":\"Cards_card__1VJLa\",\"infected\":\"Cards_infected__3436U\",\"recovered\":\"Cards_recovered__oK4wk\",\"deaths\":\"Cards_deaths__3HIwJ\"};","import React from \"react\";\r\nimport { Card,CardContent,Typography,Grid, } from  '@material-ui/core'\r\nimport  styles from \"./Cards.module.css\";\r\nimport CountUp  from 'react-countup';\r\nimport cx from \"classname\";\r\n\r\n\r\n const Cards = ({ data:{ confirmed,recovered, deaths,lastUpdate,fetchedData,country }}) => {\r\n    //  console.log(confirmed)\r\n     if(!confirmed){\r\n         return 'Loding....';\r\n     }\r\n     return (\r\n         <div className={styles.container}>\r\n         <Grid container spacing={3} justify=\"center\">\r\n         <Grid item  component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Infected Person</Typography>\r\n                <Typography variant=\"h5\">\r\n                <CountUp\r\n                    start={0}\r\n                    end={confirmed.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number Case Infected from COVID-19</Typography>\r\n            </CardContent>\r\n         </Grid>\r\n         <Grid item  component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}> \r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom> Recovered Person</Typography>\r\n                <Typography variant=\"h5\">\r\n                <CountUp\r\n                    start={0}\r\n                    end={recovered.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                />\r\n                </Typography>                \r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of Recovered from COVID-19  </Typography>\r\n            </CardContent>\r\n         </Grid>\r\n         <Grid item  component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                <Typography variant=\"h5\">\r\n                <CountUp\r\n                    start={0}\r\n                    end={deaths.value}\r\n                    duration={2.5}\r\n                    separator=\",\"\r\n                />\r\n                </Typography>                \r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">Number of Deaths from COVID-19  </Typography>\r\n            </CardContent>\r\n         </Grid>\r\n         </Grid>\r\n\r\n         </div>\r\n          \r\n     )\r\n }\r\n export default Cards;","import  axios  from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\"\r\n\r\nexport const fetchData = async (country) =>{\r\n    let  changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const { data:{ confirmed , recovered, deaths, lastUpdate }}  = await axios.get(changeableUrl);\r\n       return{confirmed,recovered,deaths,lastUpdate}\r\n    } \r\n    catch (error){\r\n         console.log(error);\r\n    }\r\n    \r\n}\r\n export const  fetchDailyData = async () => {\r\n     try{\r\n         const {data} = await axios.get(`${url}/daily`);\r\n        //  console.log(data);\r\n        const modifiedData = data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n     }\r\n     catch(error){\r\n          \r\n     }\r\n     \r\n }\r\n export  const fetchCountries  = async () => {\r\n     try{\r\n         const {data:{countries}}  = await axios.get(`${url}/countries`);\r\n        //  console.log (countries);\r\n        return countries.map((country) => country.name)\r\n     }\r\n     catch (error){\r\n        console.log (error);\r\n\r\n     }\r\n }","import React,{useState,useEffect} from \"react\";\r\nimport {fetchDailyData} from \"../../api\";\r\n// import { Line, Bar} from  'react-chartjs-2';\r\nimport {Line,Bar} from \"react-chartjs-2\"\r\nimport styles from './Charts.module.css'\r\n\r\n\r\n const Charts = ({data: {confirmed, recovered , deaths},country}) => {\r\n     const [dailyData ,setDailyData] = useState({});\r\n\r\n     useEffect (() =>{\r\n         const fetchAPI = async () =>{\r\n              setDailyData( await fetchDailyData());\r\n         }\r\n        //  console.log(dailyData);\r\n        fetchAPI();\r\n     },[]\r\n     );\r\n     const lineChart =(\r\n         dailyData.length\r\n         ?\r\n        ( <Line\r\n           data={{\r\n            labels:dailyData.map(({date})=> date),\r\n            datasets:[{\r\n                data:dailyData.map(({confirmed})=> confirmed),\r\n                label:\"infected\" , \r\n                borderColor:\"#3333ff\", \r\n                fill:true , \r\n            },{\r\n                data:dailyData.map(({deaths})=> deaths),\r\n                label:\"Deaths\" , \r\n                borderColor:\"red\", \r\n                backgroundColor:\"rgba(255,0,0,0.5)\",\r\n                fill:true ,\r\n            }],\r\n           }}\r\n         />): null\r\n     );\r\n      console.log(confirmed, recovered, deaths)\r\n\r\n      const barChart = (\r\n          confirmed\r\n          ?(\r\n              <Bar\r\n                data={{\r\n                  labels:['Infected', 'Recovered', 'Deaths' ],\r\n                  datasets:[{\r\n                      label:'People',\r\n                      backgroundColor:[' rgba(0, 0,255,  0.5)',\r\n                      ' rgba(0,255,  0, 0.5',\r\n                      'rgba(255, 0,0,  0.5)'],\r\n                      data:[confirmed.value, recovered.value, deaths.value]                  }]\r\n                }}\r\n                option={{\r\n                    legend:{display: false},\r\n                    title:{display:true, text:`Current state in ${country}`},\r\n                }}\r\n\r\n              />\r\n          ): null\r\n      )\r\n\r\n     return (\r\n          <div className={styles.container}>\r\n             {country ? barChart : lineChart}\r\n          </div>\r\n  \r\n     );\r\n }\r\n export default Charts;","import React,{useState,useEffect} from \"react\";\r\nimport {NativeSelect,FormControl, } from \"@material-ui/core\";\r\nimport  styles  from \"./Country.module.css\"\r\nimport {fetchCountries} from \"../../api\"\r\n\r\n const CountryPicker = ({handleCountryChange}) => {\r\n     const  [fetchedCountries,setFetchedCountries] = useState([]);\r\n     \r\n     useEffect (()=>{\r\n         const fetchAPI = async () => {\r\n             setFetchedCountries(await fetchCountries());\r\n\r\n         }\r\n         fetchAPI();\r\n     },[setFetchedCountries]);\r\n     return (\r\n         <FormControl className={styles.fromControl}>\r\n             <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                 <option value=\"global\" disabled >Global</option>\r\n                 {fetchedCountries.map((country,i) =><option key={i} value={country}>{country}</option>)}\r\n             </NativeSelect>\r\n         </FormControl>\r\n     );\r\n }\r\n export default CountryPicker;","import React from \"react\";\r\nimport { Card,Charts,CountryPicker } from \"./component\";\r\nimport styles  from  \"./App.module.css\";\r\nimport { fetchData } from \"./api\"\r\nimport coronaImage from \"./image.png\"\r\n\r\nclass App extends React.Component {\r\n   state ={\r\n       data:{},\r\n       country:'',\r\n       count:[]\r\n   }\r\n\r\n     async componentDidMount(){\r\n        const  fetchedData = await fetchData();\r\n        \r\n        this.setState({data: fetchedData })\r\n    }\r\n\r\n    \r\n    handleCountryChange = async (country,e) => {\r\n        const  fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country: country})\r\n   \r\n    }\r\n     \r\n    render(){\r\n        const  {data,country} = this.state;\r\n        return(\r\n        <div className={styles.container}>\r\n            <img  src={coronaImage} alt=\"COVID-19\" className={styles.image}/>\r\n            <h3>STAY HOME STAY SAFE AND SAVE WORLD</h3>\r\n            <Card  data={data}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Charts data={data} country={country} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render (<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2oo0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__OiHhi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fromcontrol\":\"Country_fromcontrol__3R4kB\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}